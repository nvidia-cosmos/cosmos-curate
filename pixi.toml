[workspace]
channels = ["rapidsai", "conda-forge", "nvidia"]
name = "cosmos-curate"
platforms = ["linux-64"]
version = "1.0.0"

[pypi-options]
extra-index-urls = ["https://pypi.nvidia.com"]

[dependencies]
python = "3.10.*"

[pypi-dependencies]
cosmos-xenna = "==0.1.3"
ray = { version = "==2.48.0", extras = ["default"] } # conda-forge package pulls in an old version of protobuf

[feature.core.system-requirements]
cuda = "12.9.1" # match the version of the nvidia/cuda docker base image

[feature.core.dependencies]
astral = "*"
attrs = "*"
azure-identity = "*"
azure-storage-blob = "*"
cattrs = "*"
easydict = "*"
fastapi = "*"
gpustat = "*"
huggingface_hub = "*"
jinja2 = "*"
loguru = "*"
numpy = "*"
nvtx = "*"
pandas = "*"
psycopg2-binary = "*"
pynvml = "*"
pyproj = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-xdist = "*"
pytorch-gpu = ">=2.7.1"
scipy = "*"
sqlalchemy = "*"
tabulate = "*"
tblib = "*"
tenacity = "*"
timezonefinder = "*"
tqdm = "*"
transformers = "==4.55.4" # pin to avoid issues with `Cosmos-Embed1-336p/modeling_qformer.py`
typer = "*"
uvicorn = "*"
webdataset = "*"

[feature.core.pypi-dependencies]
av = "*" # conda-forge package pulls in ffmpeg
ngcsdk = "*" # not available on conda-forge
opencv-python-headless = "*" # not available on conda-forge
pillow = "*"  # required by phi-4 model, part of task, needs to be serialized
pulp = "*" # conda-forge package is too old

[feature.cuml.system-requirements]
cuda = "12.9.1" # match the version of the nvidia/cuda docker base image

[feature.cuml.dependencies]
azure-identity = "*"
azure-storage-blob = "*"
cuml = "==25.08"
loguru = "*"
tqdm = "*"

[feature.cuml.pypi-dependencies]
ngcsdk = "*" # not available on conda-forge

[feature.model-download.dependencies]
azure-identity = "*"
azure-storage-blob = "*"
cattrs = "*"
huggingface_hub = "*"
loguru = "*"
pandas = "*"
pynvml = "*"
numpy = "*"
scipy = "*"
tabulate = "*"

[feature.model-download.pypi-dependencies]
ngcsdk = "*" # not available on conda-forge
opencv-python-headless = "*" # not available on conda-forge

[feature.phi.system-requirements]
cuda = "12.9.1" # match the version of the nvidia/cuda docker base image

[feature.phi.dependencies]
attrs = "*"
azure-identity = "*"
azure-storage-blob = "*"
cattrs = "*"
flash-attn = "*"
loguru = "*"
nvtx = "*"
numpy = "*"
pandas = "*"
pynvml = "*"
pytorch-gpu = ">=2.7.1"
scipy = "*"
tabulate = "*"

[feature.phi.pypi-dependencies]
av = "*" # conda-forge package pulls in ffmpeg
accelerate = "*"
backoff = "*"
ngcsdk = "*" # not available on conda-forge
opencv-python-headless = "*" # not available on conda-forge
peft = "==0.13.2"
pillow = "*"
pulp = "*" # conda-forge package is too old
setuptools = "*"
timm = "*" # conda-forge package pulls in torchvision, which is behind
transformers = "==4.51.3"

[feature.unified.dependencies]
cuda-libraries-dev = "*"
flash-attn = "*"
flash-attn-fused-dense = "*"
flash-attn-layer-norm = "*"
pycuda = "*"

[feature.unified.pypi-dependencies]
cvcuda-cu12 = "*" # not available on conda-forge
PyNvVideoCodec = "*" # not available on conda-forge
timm = "*" # conda-forge package pulls in torchvision, which is behind
vllm = ">=0.10.0" # not available on conda-forge

[feature.pip.dependencies]
pip = "*"

[environments]
cuml = ["cuml"]
default = ["core"]
model-download = ["model-download"]
phi = ["phi"]
paddle-ocr = ["core", "pip"]
transformers = ["core"]
unified = ["core", "unified"]
